[
  {
    "reference": "Juan Arango escaped punishment from the referee for biting Jesus Zavela .\nHe could face a retrospective punishment for the incident .\nArango had earlier scored a free kick in his team's 4-3 defeat .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Juan Arango escaped punishment from the referee for biting Jesus Zavela .\nHe could face a retrospective punishment for the incident .\nArango had earlier scored a free kick in his team's 4-3 defeat .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Juan Arango",
          "predicate": "escaped punishment from",
          "object": "referee"
        },
        {
          "subject": "Juan Arango",
          "predicate": "biting",
          "object": "Jesus Zavela"
        },
        {
          "subject": "Juan Arango",
          "predicate": "could face",
          "object": "retrospective punishment"
        },
        {
          "subject": "Juan Arango",
          "predicate": "scored",
          "object": "free kick"
        },
        {
          "subject": "Juan Arango",
          "predicate": "team's defeat",
          "object": "4-3"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Juan Arango, escaped punishment from, referee]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Juan Arango, biting, Jesus Zavela]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Juan Arango, could face, retrospective punishment]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Juan Arango, scored, free kick]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Juan Arango, team's defeat, 4-3]\n\"\"\n),\n"
    ],
    "claims": [
      "Juan Arango escaped punishment from the referee.",
      "Juan Arango bit Jesus Zavela.",
      "Juan Arango could face retrospective punishment.",
      "Juan Arango scored a free kick.",
      "Juan Arango's team was defeated 4-3."
    ]
  },
  {
    "reference": "Gary Gardner confirms he'll report to Aston Villa for pre-season training .\nThe 22-year-old is out on loan at Championship side Nottingham Forest .\nTim Sherwood is keen to asses Gardner ahead of next season .\nThe midfielder would prefer a move back to Forest if Villa doesn't wok out .\nCLICK HERE for all the latest Aston Villa news .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Gary Gardner confirms he'll report to Aston Villa for pre-season training .\nThe 22-year-old is out on loan at Championship side Nottingham Forest .\nTim Sherwood is keen to asses Gardner ahead of next season .\nThe midfielder would prefer a move back to Forest if Villa doesn't wok out .\nCLICK HERE for all the latest Aston Villa news .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Gary Gardner",
          "predicate": "confirms",
          "object": "he'll report to Aston Villa for pre-season training"
        },
        {
          "subject": "Gary Gardner",
          "predicate": "is out on loan at",
          "object": "Championship side Nottingham Forest"
        },
        {
          "subject": "Tim Sherwood",
          "predicate": "is keen to asses",
          "object": "Gardner ahead of next season"
        },
        {
          "subject": "Gardner",
          "predicate": "would prefer a move back to",
          "object": "Forest if Villa doesn't work out"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Gary Gardner, confirms, he'll report to Aston Villa for pre-season training]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Gary Gardner, is out on loan at, Championship side Nottingham Forest]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Tim Sherwood, is keen to asses, Gardner ahead of next season]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Gardner, would prefer a move back to, Forest if Villa doesn't work out]\n\"\"\n),\n"
    ],
    "claims": [
      "Gary Gardner confirms he'll report to Aston Villa for pre-season training.",
      "Gary Gardner is out on loan at Championship side Nottingham Forest.",
      "Tim Sherwood is keen to assess Gardner ahead of next season.",
      "Gardner would prefer to move back to Forest if Villa doesn't work out."
    ]
  },
  {
    "reference": "Current federal government guidelines dictate the people should limit their salt intake to 2,300 milligrams .\nScientists now believe a typical healthy person can consume as much as 6,000 milligrams per day without significantly raising health risks .\nThe same skeptics also warn of the health risks associated with consuming less than 3,000 milligrams .\nAverage American ingests about 3,500 milligrams of salt per day .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Current federal government guidelines dictate the people should limit their salt intake to 2,300 milligrams .\nScientists now believe a typical healthy person can consume as much as 6,000 milligrams per day without significantly raising health risks .\nThe same skeptics also warn of the health risks associated with consuming less than 3,000 milligrams .\nAverage American ingests about 3,500 milligrams of salt per day .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "federal government guidelines",
          "predicate": "dictate",
          "object": "people"
        },
        {
          "subject": "people",
          "predicate": "limit",
          "object": "salt intake to 2,300 milligrams"
        },
        {
          "subject": "Scientists",
          "predicate": "believe",
          "object": "typical healthy person can consume as much as 6,000 milligrams per day"
        },
        {
          "subject": "skeptics",
          "predicate": "warn of",
          "object": "health risks associated with consuming less than 3,000 milligrams"
        },
        {
          "subject": "Average American",
          "predicate": "ingests",
          "object": "about 3,500 milligrams of salt per day"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [federal government guidelines, dictate, people]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [people, limit, salt intake to 2,300 milligrams]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Scientists, believe, typical healthy person can consume as much as 6,000 milligrams per day]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [skeptics, warn of, health risks associated with consuming less than 3,000 milligrams]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Average American, ingests, about 3,500 milligrams of salt per day]\n\"\"\n),\n"
    ],
    "claims": [
      "Federal government guidelines dictate people.",
      "People should limit their salt intake to 2,300 milligrams.",
      "Scientists believe a typical healthy person can consume as much as 6,000 milligrams of a substance per day.",
      "Skeptics warn of health risks associated with consuming less than 3,000 milligrams.",
      "The average American ingests about 3,500 milligrams of salt per day."
    ]
  },
  {
    "reference": "The spread, which was shot by photographer Mario Testino, also stars Gigi Hadid, Ansel Elgort, Dylan Penn and her younger brother Hopper .\nThis is 19-year-old Kendall's fifth time appearing in the pages of Vogue .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The spread, which was shot by photographer Mario Testino, also stars Gigi Hadid, Ansel Elgort, Dylan Penn and her younger brother Hopper .\nThis is 19-year-old Kendall's fifth time appearing in the pages of Vogue .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Mario Testino",
          "predicate": "shot",
          "object": "the spread"
        },
        {
          "subject": "the spread",
          "predicate": "stars",
          "object": "Gigi Hadid"
        },
        {
          "subject": "the spread",
          "predicate": "stars",
          "object": "Ansel Elgort"
        },
        {
          "subject": "the spread",
          "predicate": "stars",
          "object": "Dylan Penn"
        },
        {
          "subject": "Dylan Penn",
          "predicate": "sibling",
          "object": "Hopper"
        },
        {
          "subject": "Kendall",
          "predicate": "appeared in",
          "object": "Vogue"
        },
        {
          "subject": "Kendall",
          "predicate": "appeared in",
          "object": "the pages"
        },
        {
          "subject": "Kendall",
          "predicate": "appeared in",
          "object": "fifth time"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Mario Testino, shot, the spread]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [the spread, stars, Gigi Hadid]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [the spread, stars, Ansel Elgort]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [the spread, stars, Dylan Penn]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Dylan Penn, sibling, Hopper]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Kendall, appeared in, Vogue]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Kendall, appeared in, the pages]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Kendall, appeared in, fifth time]\n\"\"\n),\n"
    ],
    "claims": [
      "Mario Testino shot the spread.",
      "Gigi Hadid stars in the spread.",
      "Ansel Elgort stars in the spread.",
      "Dylan Penn stars in the spread.",
      "Dylan Penn is a sibling of Hopper.",
      "Kendall appeared in Vogue.",
      "Kendall appeared in the pages.",
      "Kendall appeared in the show for the fifth time."
    ]
  },
  {
    "reference": "Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'\nThe 22-year-old has seven goals in 22 Serie A appearances this season .\nPogba has also attracted interest from Manchester United, Chelsea and Manchester City .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'\nThe 22-year-old has seven goals in 22 Serie A appearances this season .\nPogba has also attracted interest from Manchester United, Chelsea and Manchester City .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Zinedine Zidane",
          "predicate": "said",
          "object": "interest in Juventus star Paul Pogba is 'only logical'"
        },
        {
          "subject": "Paul Pogba",
          "predicate": "has",
          "object": "seven goals in 22 Serie A appearances this season"
        },
        {
          "subject": "Paul Pogba",
          "predicate": "attracted interest from",
          "object": "Manchester United"
        },
        {
          "subject": "Paul Pogba",
          "predicate": "attracted interest from",
          "object": "Chelsea"
        },
        {
          "subject": "Paul Pogba",
          "predicate": "attracted interest from",
          "object": "Manchester City"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Zinedine Zidane, said, interest in Juventus star Paul Pogba is 'only logical']\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Paul Pogba, has, seven goals in 22 Serie A appearances this season]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Paul Pogba, attracted interest from, Manchester United]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Paul Pogba, attracted interest from, Chelsea]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Paul Pogba, attracted interest from, Manchester City]\n\"\"\n),\n"
    ],
    "claims": [
      "Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'.",
      "Paul Pogba has scored seven goals in 22 Serie A appearances this season.",
      "Paul Pogba has attracted interest from Manchester United.",
      "Paul Pogba has attracted interest from Chelsea.",
      "Paul Pogba has attracted interest from Manchester City."
    ]
  },
  {
    "reference": "Jonathan Pearce was at the Emirates to commentate for Match of the Day .\nThe 55-year-old was preparing a piece to camera when a sprinkler came on .\nPearce was soaked and ran out of shot, saying 'you could have told us'\nHe took it in good spirits, later laughing off the incident on air .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Jonathan Pearce was at the Emirates to commentate for Match of the Day .\nThe 55-year-old was preparing a piece to camera when a sprinkler came on .\nPearce was soaked and ran out of shot, saying 'you could have told us'\nHe took it in good spirits, later laughing off the incident on air .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Jonathan Pearce",
          "predicate": "was at",
          "object": "Emirates"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "commentated for",
          "object": "Match of the Day"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "was soaked",
          "object": "sprinkler"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "ran out of shot",
          "object": "sprinkler"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "said",
          "object": "'you could have told us'"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "took it in good spirits",
          "object": "incident"
        },
        {
          "subject": "Jonathan Pearce",
          "predicate": "laughed off",
          "object": "incident"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, was at, Emirates]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, commentated for, Match of the Day]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, was soaked, sprinkler]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, ran out of shot, sprinkler]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, said, 'you could have told us']\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, took it in good spirits, incident]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Jonathan Pearce, laughed off, incident]\n\"\"\n),\n"
    ],
    "claims": [
      "Jonathan Pearce was at Emirates.",
      "Jonathan Pearce commentated for Match of the Day.",
      "Jonathan Pearce was soaked by a sprinkler.",
      "Jonathan Pearce ran out of shot due to a sprinkler.",
      "Jonathan Pearce said, \"you could have told us.\"",
      "Jonathan Pearce took the incident in good spirits.",
      "Jonathan Pearce laughed off the incident."
    ]
  },
  {
    "reference": "The main suspect in the most brutal massacre in recent Philippine history has gone on trial.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The main suspect in the most brutal massacre in recent Philippine history has gone on trial.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "suspect",
          "predicate": "is main suspect in",
          "object": "most brutal massacre in recent Philippine history"
        },
        {
          "subject": "suspect",
          "predicate": "has gone on",
          "object": "trial"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [suspect, is main suspect in, most brutal massacre in recent Philippine history]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [suspect, has gone on, trial]\n\"\"\n),\n"
    ],
    "claims": [
      "The suspect is the main suspect in the most brutal massacre in recent Philippine history.",
      "The suspect has gone on trial."
    ]
  },
  {
    "reference": "The government says it will increase the levy on banks from 0.078% to 0.088% from 1 January.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The government says it will increase the levy on banks from 0.078% to 0.088% from 1 January.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "government",
          "predicate": "will increase",
          "object": "levy on banks"
        },
        {
          "subject": "levy on banks",
          "predicate": "from",
          "object": "0.078%"
        },
        {
          "subject": "levy on banks",
          "predicate": "to",
          "object": "0.088%"
        },
        {
          "subject": "levy on banks",
          "predicate": "effective from",
          "object": "1 January"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [government, will increase, levy on banks]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [levy on banks, from, 0.078%]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [levy on banks, to, 0.088%]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [levy on banks, effective from, 1 January]\n\"\"\n),\n"
    ],
    "claims": [
      "The government will increase the levy on banks.",
      "A levy of 0.078% is imposed on banks.",
      "A levy of 0.088% is imposed on banks.",
      "A levy on banks will be effective starting from 1 January."
    ]
  },
  {
    "reference": "Footballer Gary Neville's controversial plans for an eco-friendly \"Teletubbies\" house have been given the go ahead by Bolton Council.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Footballer Gary Neville's controversial plans for an eco-friendly \"Teletubbies\" house have been given the go ahead by Bolton Council.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Gary Neville",
          "predicate": "is a",
          "object": "Footballer"
        },
        {
          "subject": "Gary Neville",
          "predicate": "has plans for",
          "object": "eco-friendly 'Teletubbies' house"
        },
        {
          "subject": "Bolton Council",
          "predicate": "gave the go ahead for",
          "object": "Gary Neville's controversial plans"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Gary Neville, is a, Footballer]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Gary Neville, has plans for, eco-friendly 'Teletubbies' house]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Bolton Council, gave the go ahead for, Gary Neville's controversial plans]\n\"\"\n),\n"
    ],
    "claims": [
      "Gary Neville is a footballer.",
      "Gary Neville has plans for an eco-friendly 'Teletubbies' house.",
      "Bolton Council approved Gary Neville's controversial plans."
    ]
  },
  {
    "reference": "Charlie's sister has passed her last university exam. Charlie and Frank will go out to celebrate that tonight.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Charlie's sister has passed her last university exam. Charlie and Frank will go out to celebrate that tonight.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Charlie's sister",
          "predicate": "passed",
          "object": "her last university exam"
        },
        {
          "subject": "Charlie",
          "predicate": "will go out to celebrate",
          "object": "that tonight"
        },
        {
          "subject": "Frank",
          "predicate": "will go out to celebrate",
          "object": "that tonight"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Charlie's sister, passed, her last university exam]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Charlie, will go out to celebrate, that tonight]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Frank, will go out to celebrate, that tonight]\n\"\"\n),\n"
    ],
    "claims": [
      "Charlie's sister passed her last university exam.",
      "Charlie will go out to celebrate tonight.",
      "Frank will go out to celebrate tonight."
    ]
  },
  {
    "reference": "Brett's cousin met his wife while playing a game together. Andrew's favorite game is the Final Fantasy. Brett and John haven't heard about it.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Brett's cousin met his wife while playing a game together. Andrew's favorite game is the Final Fantasy. Brett and John haven't heard about it.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Brett's cousin",
          "predicate": "met",
          "object": "his wife"
        },
        {
          "subject": "Brett's cousin",
          "predicate": "played a game together with",
          "object": "his wife"
        },
        {
          "subject": "Brett's cousin",
          "predicate": "played a game together with",
          "object": "Brett"
        },
        {
          "subject": "Brett's cousin",
          "predicate": "played a game together with",
          "object": "John"
        },
        {
          "subject": "Andrew",
          "predicate": "favorite game is",
          "object": "Final Fantasy"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Brett's cousin, met, his wife]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Brett's cousin, played a game together with, his wife]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Brett's cousin, played a game together with, Brett]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Brett's cousin, played a game together with, John]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Andrew, favorite game is, Final Fantasy]\n\"\"\n),\n"
    ],
    "claims": [
      "Brett's cousin met his wife.",
      "Brett's cousin played a game together with his wife.",
      "Brett's cousin played a game together with Brett.",
      "Brett's cousin played a game together with John.",
      "Andrew's favorite game is Final Fantasy."
    ]
  },
  {
    "reference": "Anna got an awful stomachache at night but she doesn't know its cause. Her mom Joanna will make her hot tea with some fresh mint leaves.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Anna got an awful stomachache at night but she doesn't know its cause. Her mom Joanna will make her hot tea with some fresh mint leaves.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": {
      "triples": [
        {
          "subject": "Anna",
          "predicate": "got",
          "object": "awful stomachache"
        },
        {
          "subject": "Anna",
          "predicate": "doesn't know",
          "object": "cause"
        },
        {
          "subject": "Joanna",
          "predicate": "will make",
          "object": "hot tea with some fresh mint leaves"
        }
      ]
    },
    "triple_to_claim_prompts": [
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Anna, got, awful stomachache]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Anna, doesn't know, cause]\n\"\"\n),\n",
      "\n(\"system\",\n\"\"\nConvert a triple into a short, standalone factual statement. \nReturn only the statement text. \nDo not add JSON or extraneous formatting.\n\"\"\n),\n(\"user\",\n\"\"\nTriple: [Joanna, will make, hot tea with some fresh mint leaves]\n\"\"\n),\n"
    ],
    "claims": [
      "Anna got an awful stomachache.",
      "Anna doesn't know the cause.",
      "Joanna will make hot tea with some fresh mint leaves."
    ]
  },
  {
    "record_id": "cnndm_test_0",
    "dataset_name": "cnndm_test",
    "reference": "Juan Arango escaped punishment from the referee for biting Jesus Zavela .\nHe could face a retrospective punishment for the incident .\nArango had earlier scored a free kick in his team's 4-3 defeat .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Juan Arango escaped punishment from the referee for biting Jesus Zavela .\nHe could face a retrospective punishment for the incident .\nArango had earlier scored a free kick in his team's 4-3 defeat .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Juan Arango escaped punishment from the referee.",
      "Juan Arango bit Jesus Zavela.",
      "Juan Arango could face retrospective punishment.",
      "Juan Arango scored a free kick.",
      "Juan Arango's team was defeated 4-3."
    ]
  },
  {
    "record_id": "cnndm_test_1",
    "dataset_name": "cnndm_test",
    "reference": "Gary Gardner confirms he'll report to Aston Villa for pre-season training .\nThe 22-year-old is out on loan at Championship side Nottingham Forest .\nTim Sherwood is keen to asses Gardner ahead of next season .\nThe midfielder would prefer a move back to Forest if Villa doesn't wok out .\nCLICK HERE for all the latest Aston Villa news .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Gary Gardner confirms he'll report to Aston Villa for pre-season training .\nThe 22-year-old is out on loan at Championship side Nottingham Forest .\nTim Sherwood is keen to asses Gardner ahead of next season .\nThe midfielder would prefer a move back to Forest if Villa doesn't wok out .\nCLICK HERE for all the latest Aston Villa news .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Gary Gardner confirms he'll report to Aston Villa for pre-season training.",
      "Gary Gardner is out on loan at Championship side Nottingham Forest.",
      "Tim Sherwood is keen to assess Gardner ahead of next season.",
      "Gardner would prefer to move back to Forest if Villa doesn't work out."
    ]
  },
  {
    "record_id": "cnndm_test_2",
    "dataset_name": "cnndm_test",
    "reference": "Current federal government guidelines dictate the people should limit their salt intake to 2,300 milligrams .\nScientists now believe a typical healthy person can consume as much as 6,000 milligrams per day without significantly raising health risks .\nThe same skeptics also warn of the health risks associated with consuming less than 3,000 milligrams .\nAverage American ingests about 3,500 milligrams of salt per day .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Current federal government guidelines dictate the people should limit their salt intake to 2,300 milligrams .\nScientists now believe a typical healthy person can consume as much as 6,000 milligrams per day without significantly raising health risks .\nThe same skeptics also warn of the health risks associated with consuming less than 3,000 milligrams .\nAverage American ingests about 3,500 milligrams of salt per day .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Federal government guidelines dictate people.",
      "People should limit their salt intake to 2,300 milligrams.",
      "Scientists believe a typical healthy person can consume as much as 6,000 milligrams of a substance per day.",
      "Skeptics warn of health risks associated with consuming less than 3,000 milligrams.",
      "The average American ingests about 3,500 milligrams of salt per day."
    ]
  },
  {
    "record_id": "cnndm_validation_0",
    "dataset_name": "cnndm_validation",
    "reference": "The spread, which was shot by photographer Mario Testino, also stars Gigi Hadid, Ansel Elgort, Dylan Penn and her younger brother Hopper .\nThis is 19-year-old Kendall's fifth time appearing in the pages of Vogue .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The spread, which was shot by photographer Mario Testino, also stars Gigi Hadid, Ansel Elgort, Dylan Penn and her younger brother Hopper .\nThis is 19-year-old Kendall's fifth time appearing in the pages of Vogue .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Mario Testino shot the spread.",
      "Gigi Hadid stars in the spread.",
      "Ansel Elgort stars in the spread.",
      "Dylan Penn stars in the spread.",
      "Dylan Penn is a sibling of Hopper.",
      "Kendall appeared in Vogue.",
      "Kendall appeared in the pages.",
      "Kendall appeared in the show for the fifth time."
    ]
  },
  {
    "record_id": "cnndm_validation_1",
    "dataset_name": "cnndm_validation",
    "reference": "Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'\nThe 22-year-old has seven goals in 22 Serie A appearances this season .\nPogba has also attracted interest from Manchester United, Chelsea and Manchester City .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'\nThe 22-year-old has seven goals in 22 Serie A appearances this season .\nPogba has also attracted interest from Manchester United, Chelsea and Manchester City .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Zinedine Zidane said interest in Juventus star Paul Pogba is 'only logical'.",
      "Paul Pogba has scored seven goals in 22 Serie A appearances this season.",
      "Paul Pogba has attracted interest from Manchester United.",
      "Paul Pogba has attracted interest from Chelsea.",
      "Paul Pogba has attracted interest from Manchester City."
    ]
  },
  {
    "record_id": "cnndm_validation_2",
    "dataset_name": "cnndm_validation",
    "reference": "Jonathan Pearce was at the Emirates to commentate for Match of the Day .\nThe 55-year-old was preparing a piece to camera when a sprinkler came on .\nPearce was soaked and ran out of shot, saying 'you could have told us'\nHe took it in good spirits, later laughing off the incident on air .",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Jonathan Pearce was at the Emirates to commentate for Match of the Day .\nThe 55-year-old was preparing a piece to camera when a sprinkler came on .\nPearce was soaked and ran out of shot, saying 'you could have told us'\nHe took it in good spirits, later laughing off the incident on air .</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Jonathan Pearce was at Emirates.",
      "Jonathan Pearce commentated for Match of the Day.",
      "Jonathan Pearce was soaked by a sprinkler.",
      "Jonathan Pearce ran out of shot due to a sprinkler.",
      "Jonathan Pearce said, \"you could have told us.\"",
      "Jonathan Pearce took the incident in good spirits.",
      "Jonathan Pearce laughed off the incident."
    ]
  },
  {
    "record_id": "xsum_0",
    "dataset_name": "xsum",
    "reference": "The main suspect in the most brutal massacre in recent Philippine history has gone on trial.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The main suspect in the most brutal massacre in recent Philippine history has gone on trial.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "The suspect is the main suspect in the most brutal massacre in recent Philippine history.",
      "The suspect has gone on trial."
    ]
  },
  {
    "record_id": "xsum_1",
    "dataset_name": "xsum",
    "reference": "The government says it will increase the levy on banks from 0.078% to 0.088% from 1 January.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>The government says it will increase the levy on banks from 0.078% to 0.088% from 1 January.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "The government will increase the levy on banks.",
      "A levy of 0.078% is imposed on banks.",
      "A levy of 0.088% is imposed on banks.",
      "A levy on banks will be effective starting from 1 January."
    ]
  },
  {
    "record_id": "xsum_2",
    "dataset_name": "xsum",
    "reference": "Footballer Gary Neville's controversial plans for an eco-friendly \"Teletubbies\" house have been given the go ahead by Bolton Council.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Footballer Gary Neville's controversial plans for an eco-friendly \"Teletubbies\" house have been given the go ahead by Bolton Council.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Gary Neville is a footballer.",
      "Gary Neville has plans for an eco-friendly 'Teletubbies' house.",
      "Bolton Council approved Gary Neville's controversial plans."
    ]
  },
  {
    "record_id": "samsum_0",
    "dataset_name": "samsum",
    "reference": "Charlie's sister has passed her last university exam. Charlie and Frank will go out to celebrate that tonight.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Charlie's sister has passed her last university exam. Charlie and Frank will go out to celebrate that tonight.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Charlie's sister passed her last university exam.",
      "Charlie will go out to celebrate tonight.",
      "Frank will go out to celebrate tonight."
    ]
  },
  {
    "record_id": "samsum_1",
    "dataset_name": "samsum",
    "reference": "Brett's cousin met his wife while playing a game together. Andrew's favorite game is the Final Fantasy. Brett and John haven't heard about it.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Brett's cousin met his wife while playing a game together. Andrew's favorite game is the Final Fantasy. Brett and John haven't heard about it.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Brett's cousin met his wife.",
      "Brett's cousin played a game together with his wife.",
      "Brett's cousin played a game together with Brett.",
      "Brett's cousin played a game together with John.",
      "Andrew's favorite game is Final Fantasy."
    ]
  },
  {
    "record_id": "samsum_2",
    "dataset_name": "samsum",
    "reference": "Anna got an awful stomachache at night but she doesn't know its cause. Her mom Joanna will make her hot tea with some fresh mint leaves.",
    "kg_parser_prompt": "\n(\"system\",\n\"\"\nYou are an expert at extracting information in structured formats to build a knowledge graph.\nStep 1 – Entity detection: Identify all entities in the raw text. Entities should be basic and unambiguous, similar to Wikipedia nodes.\nStep 2 – Coreference resolution: Determine which expressions in the text refer to the same entity. Avoid duplicates by selecting only the most specific form.\nStep 3 – Relation extraction: Identify semantic relationships between the entities.\nFormat: Return the knowledge graph as a JSON object with a single key \"triples\". The value must be a list of triples, where each triple is a list of exactly three non-empty strings, for example: [\"entity 1\", \"relation\", \"entity 2\"].\nThe output must be valid JSON and include nothing but the JSON object.\n\"\"\n,\n\"human\",\n\"Use the above instructions to extract a knowledge graph from the following input. Return only the JSON object without any extra text or commentary. Input: <input>Anna got an awful stomachache at night but she doesn't know its cause. Her mom Joanna will make her hot tea with some fresh mint leaves.</input>.\"\n,\n\"human\",\n\"\"\nImportant Tips:\n- Ensure that every relevant piece of information is captured.\n- Each triple must contain exactly three non-empty strings.\n- Do not include any additional text, explanations, or formatting outside the JSON object.\n- Validate that the JSON output is well-formed.\n\"\"\n),\n(\"human\",\n\"\"\nHere are some example input and output pairs.\nExample 1.\nInput:\n\"The Walt Disney Company, commonly known as Disney, is an American multinational mass media and entertainment conglomerate that is headquartered at the Walt Disney Studios complex in Burbank, California.\"\nOutput:\n{\n  \"triples\": [\n    [\"The Walt Disney Company\", \"headquartered at\", \"Walt Disney Studios complex in Burbank, California\"],\n    [\"The Walt Disney Company\", \"commonly known as\", \"Disney\"],\n    [\"The Walt Disney Company\", \"instance of\", \"American multinational mass media and entertainment conglomerate\"]\n  ]\n}\n\nExample 2.\nInput:\n\"Amanda Jackson was born in Springfield, Ohio, USA on June 1, 1985. She was a basketball player for the U.S. women’s team.\"\nOutput:\n{\n  \"triples\": [\n    [\"Amanda Jackson\", \"born in\", \"Springfield, Ohio, USA\"],\n    [\"Amanda Jackson\", \"born on\", \"June 1, 1985\"],\n    [\"Amanda Jackson\", \"occupation\", \"basketball player\"],\n    [\"Amanda Jackson\", \"played for\", \"U.S. women’s basketball team\"]\n  ]\n}\n\nExample 3.\nInput:\n\"Music executive Darius Van Arman was born in Pennsylvania. He attended Gonzaga College High School and is a human being.\"\nOutput:\n{\n  \"triples\": [\n    [\"Darius Van Arman\", \"occupation\", \"Music executive\"],\n    [\"Darius Van Arman\", \"born in\", \"Pennsylvania\"],\n    [\"Darius Van Arman\", \"attended\", \"Gonzaga College High School\"],\n    [\"Darius Van Arman\", \"instance of\", \"human being\"]\n  ]\n}\n\nExample 4.\nInput:\n\"Italy had 3.6x times more cases of coronavirus than China.\"\nOutput:\n{\n  \"triples\": [\n    [\"Italy\", \"had 3.6x times more cases of coronavirus than\", \"China\"]\n  ]\n}\n\"\"\n),\n",
    "kg_output": "unavailable (already generated; no stored triple data)",
    "triple_to_claim_prompts": "unavailable (already generated; no stored triple data)",
    "claims": [
      "Anna got an awful stomachache.",
      "Anna doesn't know the cause.",
      "Joanna will make hot tea with some fresh mint leaves."
    ]
  }
]